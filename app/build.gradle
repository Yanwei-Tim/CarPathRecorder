apply plugin: 'com.android.application'


def getVersionCode = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--all', '--count'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    }
    catch (ignored) {
        return -1;
    }
}

def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags', '--dirty'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }
    catch (ignored) {
        return null;
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    defaultConfig {
        applicationId "app.gavin.carpathrecorder"
        minSdkVersion 16
        targetSdkVersion 17
        versionCode getVersionCode()
        versionName getVersionName()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    testCompile 'junit:junit:4.12'
    compile files('libs/AMap_Location_v2.3.0_20160112.jar')
    compile files('libs/android-async-http-1.4.9.jar')
    compile files('libs/httpclient-4.4.1.1.jar')
    compile files('libs/AMap_3DMap_V3.2.0.1_20160122.jar')
    compile(name:'subprocess', ext:'aar')
}

build.doLast{
	println "\r\n===========\r\n\tVersionName:" + getVersionName() + "\r\n\tversionCode:" + getVersionCode() + "\r\n===========";
}